[metadata]
name = Montreal Forced Aligner
description = Montreal Forced Aligner is a package for aligning speech corpora using Kaldi functionality.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner
author = Montreal Corpus Tools
author_email = michael.e.mcauliffe@gmail.com
maintainer = Michael McAuliffe
maintainer_email = michael.e.mcauliffe@gmail.com
license = MIT
license_file = LICENSE
license_files = LICENSE
classifiers = Development Status :: 3 - Alpha
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Multimedia :: Sound/Audio :: Speech
    Topic :: Scientific/Engineering
    Topic :: Text Processing :: Linguistic
keywords = phonology
    corpus
    phonetics
    alignment
    segmentation
    transcription
    g2p
    language modeling

[options]
packages = find:
install_requires =
	biopython
	click
	dataclassy
	kneed
	librosa
	matplotlib
	numba
	numpy
	pyyaml
	requests
	rich
	rich-click
	scikit-learn
	seaborn
	tqdm
  	pysoundfile
  	kaldi=*=*cpu*
	sox
  	ffmpeg
  	scipy
  	pynini
  	openfst
  	hdbscan
  	baumwelch
  	praatio=6.0.0
  	biopython=1.79
  	sqlalchemy>=2.0
  	pgvector
  	pgvector-python
  	postgresql
  	psycopg2
  	click
  	pytorch
  	torchaudio
  	setuptools_scm
  	pytest
  	pytest-mypy
  	pytest-cov
  	pytest-timeout
  	mock
  	coverage
  	coveralls
  	interrogate
  	pip
python_requires = >=3.8
include_package_data = True

[options.packages.find]
exclude = tests

[options.entry_points]
console_scripts =
    mfa = montreal_forced_aligner.command_line.mfa:mfa_cli

[options.extras_require]
anchor =
    anchor-annotator
    pyqtgraph
    pyside6
dev =
    coverage
    coveralls
    interrogate
    pytest
    pytest-mypy
    setuptools-scm
    tomli
    tox
    tox-conda
docs =
    interrogate
    numpydoc
    pydata-sphinx-theme
    sphinx
    sphinx-click
    sphinx-design
testing =
    coverage
    coveralls
    pytest
    pytest-mypy

[options.package_data]
* = *.yaml

[tool:pytest]
testpaths = tests
norecursedirs = data
